/* Build file HotCiv Framework exercises.

   Converted to Gradle build system, Mar 2018

   Adapted for the SWEA course, Oct 2017

   Updated for newer libraries, Oct 2015

   This source code is from the book 
     "Flexible, Reliable Software:
       Using Patterns and Agile Development"
     published 2010 by CRC Press.
   Author: 
     Henrik B Christensen 
     Computer Science Department
     Aarhus University
   
   This source code is provided WITHOUT ANY WARRANTY either 
   expressed or implied. You may study, use, modify, and 
   distribute it for non-commercial purposes. For any 
   commercial use, see http://www.baerbak.com/
*/

apply plugin: 'java'
apply plugin: 'jacoco'

repositories {
    jcenter()
    // the fractal library is NOT in the official JCenter
    // repository, only in BÃ¦rbak's public repository.
    maven {
        url 'https://dl.bintray.com/henrikbaerbak/maven'
    }
}
    
dependencies {
    compile 'com.baerbak.maven:minidraw:1.13'
    compile 'com.baerbak.maven:hotciv-fractal:1.0'
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
}

// === Execution tasks - for running the various integration tests
//     for manual test-driving the MiniDraw framework customization.

// === Demonstrate specialized MiniDraw implementations

task show(type: JavaExec) {
  group 'SWEA HotCiv Demonstration'
  description 'Demonstrate MapView'

  main = 'hotciv.visual.ShowWorld'
  classpath = sourceSets.main.runtimeClasspath
}

task text(type: JavaExec) {
  group 'SWEA HotCiv Demonstration'
  description 'Demonstrate TextFigure'

  main = 'hotciv.visual.ShowText'
  classpath = sourceSets.main.runtimeClasspath
}

task city(type: JavaExec) {
  group 'SWEA HotCiv Demonstration'
  description 'Demonstrate CityFigure'

  main = 'hotciv.visual.ShowCity'
  classpath = sourceSets.main.runtimeClasspath
}

// === Placeholders for YOUR work on solving SWEA exercises

task update(type: JavaExec) {
  group 'SWEA Mandatory'
  description 'Test partial CivDrawing implementation (and partial solution for FRS 36.38)'

  main = 'hotciv.visual.ShowUpdating'
  classpath = sourceSets.main.runtimeClasspath
}

task move(type: JavaExec) {
  group 'SWEA Mandatory'
  description 'Test UnitMoveTool, FRS 36.39'

  main = 'hotciv.visual.ShowMove'
  classpath = sourceSets.main.runtimeClasspath
}

task setfocus(type: JavaExec) {
  group 'SWEA Mandatory'
  description 'Test SetFocusTool, FRS 36.40'

  main = 'hotciv.visual.ShowSetFocus'
  classpath = sourceSets.main.runtimeClasspath
}

task turn(type: JavaExec) {
  group 'SWEA Mandatory'
  description 'Test EndOfTurnTool, FRS 36.42'

  main = 'hotciv.visual.ShowEndOfTurn'
  classpath = sourceSets.main.runtimeClasspath
}

task action(type: JavaExec) {
  group 'SWEA Mandatory'
  description 'Test ActionTool, FRS 36.43'

  main = 'hotciv.visual.ShowAction'
  classpath = sourceSets.main.runtimeClasspath
}

task comp(type: JavaExec) {
  group 'SWEA Mandatory'
  description 'Test CompositionTool, FRS 36.44'

  main = 'hotciv.visual.ShowComposition'
  classpath = sourceSets.main.runtimeClasspath
}

task semi(type: JavaExec) {
  group 'SWEA Mandatory'
  description ' Play SemiCiv using the GUI :-)'

  main = 'hotciv.visual.ShowSemi'
  classpath = sourceSets.main.runtimeClasspath
}
